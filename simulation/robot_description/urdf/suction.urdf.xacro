<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find robot_description)/urdf/ur.transmission.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/ur.gazebo.xacro" />

  <!-- Inertia parameters -->
  <xacro:property name="base_mass" value="4.0" />  <!-- This mass might be incorrect -->
  <xacro:property name="shoulder_mass" value="3.7000" />
  <xacro:property name="upper_arm_mass" value="8.3930" />
  <xacro:property name="forearm_mass" value="2.2750" />
  <xacro:property name="wrist_1_mass" value="1.2190" />
  <xacro:property name="wrist_2_mass" value="1.2190" />
  <xacro:property name="wrist_3_mass" value="0.1879" />

  <xacro:property name="shoulder_cog" value="0.0 0.00193 -0.02561" />
  <xacro:property name="upper_arm_cog" value="0.0 -0.024201 0.2125" />
  <xacro:property name="forearm_cog" value="0.0 0.0265 0.11993" />
  <xacro:property name="wrist_1_cog" value="0.0 0.110949 0.01634" />
  <xacro:property name="wrist_2_cog" value="0.0 0.0018 0.11099" />
  <xacro:property name="wrist_3_cog" value="0.0 0.001159 0.0" />

  <!-- Kinematic model -->
  <!-- Properties from urcontrol.conf -->
  <!--
    DH for UR5:
    a = [0.00000, -0.42500, -0.39225,  0.00000,  0.00000,  0.0000]
    d = [0.089159,  0.00000,  0.00000,  0.10915,  0.09465,  0.0823]
    alpha = [ 1.570796327, 0, 0, 1.570796327, -1.570796327, 0 ]
    q_home_offset = [0, -1.570796327, 0, -1.570796327, 0, 0]
    joint_direction = [-1, -1, 1, 1, 1, 1]
    mass = [3.7000, 8.3930, 2.2750, 1.2190, 1.2190, 0.1879]
    center_of_mass = [ [0, -0.02561, 0.00193], [0.2125, 0, 0.11336], [0.11993, 0.0, 0.0265], [0, -0.0018, 0.01634], [0, 0.0018,0.01634], [0, 0, -0.001159] ]
  -->
  <xacro:property name="ur5_d1" value="0.089159" />
  <xacro:property name="ur5_a2" value="-0.42500" />
  <xacro:property name="ur5_a3" value="-0.39225" />
  <xacro:property name="ur5_d4" value="0.10915" />
  <xacro:property name="ur5_d5" value="0.09465" />
  <xacro:property name="ur5_d6" value="0.0823" />

  <!-- Arbitrary offsets for shoulder/elbow joints -->
  <xacro:property name="shoulder_offset" value="0.13585" />  <!-- measured from model -->
  <xacro:property name="elbow_offset" value="-0.1197" /> <!-- measured from model -->

  <!-- link lengths used in model -->
  <xacro:property name="shoulder_height" value="${ur5_d1}" />
  <xacro:property name="upper_arm_length" value="${-ur5_a2}" />
  <xacro:property name="forearm_length" value="${-ur5_a3}" />
  <xacro:property name="wrist_1_length" value="${ur5_d4 - elbow_offset - shoulder_offset}" />
  <xacro:property name="wrist_2_length" value="${ur5_d5}" />
  <xacro:property name="wrist_3_length" value="${ur5_d6}" />
  <!--property name="shoulder_height" value="0.089159" /-->
  <!--property name="shoulder_offset" value="0.13585" /-->  <!-- shoulder_offset - elbow_offset + wrist_1_length = 0.10915 -->
  <!--property name="upper_arm_length" value="0.42500" /-->
  <!--property name="elbow_offset" value="0.1197" /-->       <!-- CAD measured -->
  <!--property name="forearm_length" value="0.39225" /-->
  <!--property name="wrist_1_length" value="0.093" /-->     <!-- CAD measured -->
  <!--property name="wrist_2_length" value="0.09465" /-->   <!-- In CAD this distance is 0.930, but in the spec it is 0.09465 -->
  <!--property name="wrist_3_length" value="0.0823" /-->

  <xacro:property name="shoulder_radius" value="0.060" />   <!-- manually measured -->
  <xacro:property name="upper_arm_radius" value="0.054" />  <!-- manually measured -->
  <xacro:property name="elbow_radius" value="0.060" />      <!-- manually measured -->
  <xacro:property name="forearm_radius" value="0.040" />    <!-- manually measured -->
  <xacro:property name="wrist_radius" value="0.045" />      <!-- manually measured -->

  <xacro:macro name="cylinder_inertial" params="radius length mass *origin">
    <inertial>
      <mass value="${mass}" />
      <xacro:insert_block name="origin" />
      <inertia ixx="${0.0833333 * mass * (3 * radius * radius + length * length)}" ixy="0.0" ixz="0.0"
        iyy="${0.0833333 * mass * (3 * radius * radius + length * length)}" iyz="0.0"
        izz="${0.5 * mass * radius * radius}" />
    </inertial>
  </xacro:macro>


  <xacro:macro name="ur5_robot" params="prefix joint_limited">

    <link name="${prefix}base_link" >
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/base.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/base.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.06" length="0.05" mass="${base_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}shoulder_pan_joint" type="revolute">
      <parent link="${prefix}base_link" />
      <child link = "${prefix}shoulder_link" />
      <origin xyz="0.0 0.0 ${shoulder_height}" rpy="0.0 0.0 0.0" />
      <axis xyz="0 0 1" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-2.0 * pi}" upper="${2.0 * pi}" effort="150.0" velocity="3.15"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="150.0" velocity="3.15"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}shoulder_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/shoulder.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/shoulder.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.06" length="0.15" mass="${shoulder_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}shoulder_lift_joint" type="revolute">
      <parent link="${prefix}shoulder_link" />
      <child link = "${prefix}upper_arm_link" />
      <origin xyz="0.0 ${shoulder_offset} 0.0" rpy="0.0 ${pi / 2.0} 0.0" />
      <axis xyz="0 1 0" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-2.0 * pi}" upper="${2.0 * pi}" effort="150.0" velocity="3.15"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="150.0" velocity="3.15"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}upper_arm_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/upperarm.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/upperarm.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.06" length="0.56" mass="${upper_arm_mass}">
        <origin xyz="0.0 0.0 0.28" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}elbow_joint" type="revolute">
      <parent link="${prefix}upper_arm_link" />
      <child link = "${prefix}forearm_link" />
      <origin xyz="0.0 ${elbow_offset} ${upper_arm_length}" rpy="0.0 0.0 0.0" />
      <axis xyz="0 1 0" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="150.0" velocity="3.15"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="150.0" velocity="3.15"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}forearm_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/forearm.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/forearm.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.06" length="0.5" mass="${forearm_mass}">
        <origin xyz="0.0 0.0 0.25" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}wrist_1_joint" type="revolute">
      <parent link="${prefix}forearm_link" />
      <child link = "${prefix}wrist_1_link" />
      <origin xyz="0.0 0.0 ${forearm_length}" rpy="0.0 ${pi / 2.0} 0.0" />
      <axis xyz="0 1 0" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-2.0 * pi}" upper="${2.0 * pi}" effort="28.0" velocity="3.2"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="28.0" velocity="3.2"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}wrist_1_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/wrist1.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/wrist1.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.6" length="0.12" mass="${wrist_1_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}wrist_2_joint" type="revolute">
      <parent link="${prefix}wrist_1_link" />
      <child link = "${prefix}wrist_2_link" />
      <origin xyz="0.0 ${wrist_1_length} 0.0" rpy="0.0 0.0 0.0" />
      <axis xyz="0 0 1" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-2.0 * pi}" upper="${2.0 * pi}" effort="28.0" velocity="3.2"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="28.0" velocity="3.2"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}wrist_2_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/wrist2.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/wrist2.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.6" length="0.12" mass="${wrist_2_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <joint name="${prefix}wrist_3_joint" type="revolute">
      <parent link="${prefix}wrist_2_link" />
      <child link = "${prefix}wrist_3_link" />
      <origin xyz="0.0 0.0 ${wrist_2_length}" rpy="0.0 0.0 0.0" />
      <axis xyz="0 1 0" />
      <xacro:unless value="${joint_limited}">
        <limit lower="${-2.0 * pi}" upper="${2.0 * pi}" effort="28.0" velocity="3.2"/>
      </xacro:unless>
      <xacro:if value="${joint_limited}">
        <limit lower="${-pi}" upper="${pi}" effort="28.0" velocity="3.2"/>
      </xacro:if>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>

    <link name="${prefix}wrist_3_link">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/visual/wrist3.dae" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/ur5/collision/wrist3.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.6" length="0.12" mass="${wrist_3_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <link name="nut_driver">
      <visual>
        <geometry>
          <mesh filename="package://robot_description/meshes/nut_driver/nut_driver.obj" />
        </geometry>
        <material name="LightGrey">
          <color rgba="0.7 0.7 0.7 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robot_description/meshes/nut_driver/nut_driver.obj" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="0.6" length="0.12" mass="${wrist_3_mass}">
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>


    <joint name="nut_driver_joint" type="fixed">
      <parent link="${prefix}wrist_3_link" />
      <child link = "nut_driver" />
      <origin xyz="0.0 ${wrist_3_length} 0.0" rpy="-1.5707 0.0 0.0" />
    </joint>

<!-- Vaccuum elements put at the tip of the nutdriver to simulate magnetic tip -->

<!-- First Vacuum -->
    <link name="vacuum_gripper">
      <gravity>0</gravity>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder radius="0.007" length="0.0025"/>
        </geometry>
        <material name="transparent">
          <color rgba="0 0 0 0"/>
        </material>
      </visual>

      <inertial>
        <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
        <mass value="0.0001"/>
        <inertia ixx="1e-08" ixy="0" ixz="0" iyy="1e-08" iyz="0" izz="1e-08"/>
      </inertial>
    </link>

    <joint name="gripper_joint" type="revolute">
      <axis xyz="1 0 0" />
      <parent link="nut_driver" />
      <child link="vacuum_gripper" />
      <origin rpy=" 0 0 0" xyz="0.0 0.0 0.113" />
      <limit effort="50" velocity="50" lower="0" upper="0" />
      <dynamics damping="0.0" friction="10"/>
    </joint>
<!-- Vaccuum plugin -->
 
  <gazebo>
      <plugin name="gazebo_ros_vacuum_gripper" filename="libgazebo_ros_vacuum_gripper.so">
        <robotNamespace>/ur5/vacuum_gripper</robotNamespace>
        <bodyName>vacuum_gripper</bodyName>
        <topicName>grasping</topicName>
	<maxForce>20</maxForce>
        <maxDistance>0.05</maxDistance>
        <minDistance>0.01</minDistance>
      </plugin>
  </gazebo> 

<!-- Second vacuum -->

    <link name="vacuum_gripper1">
      <gravity>0</gravity>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder radius="0.0025" length="0.001"/>
        </geometry>
        <material name="transparent">
          <color rgba="0 0 0 0"/>
        </material>
      </visual>

      <inertial>
        <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
        <mass value="0.0001"/>
        <inertia ixx="1e-08" ixy="0" ixz="0" iyy="1e-08" iyz="0" izz="1e-08"/>
      </inertial>
    </link>

    <joint name="gripper_joint_1" type="revolute">
      <axis xyz="1 0 0" />
      <parent link="nut_driver" />
      <child link="vacuum_gripper1" />
      <origin rpy=" 0 0 0" xyz="0.0 0.0065 0.117" />
      <limit effort="50" velocity="50" lower="0" upper="0" />
      <dynamics damping="0.0" friction="10"/>
    </joint>


  <gazebo>
      <plugin name="gazebo_ros_vacuum_gripper" filename="libgazebo_ros_vacuum_gripper.so">
        <robotNamespace>/ur5/vacuum_gripper1</robotNamespace>
        <bodyName>vacuum_gripper1</bodyName>
        <topicName>grasping1</topicName>
	<maxForce>10</maxForce>
        <maxDistance>0.05</maxDistance>
        <minDistance>0.01</minDistance>
      </plugin>
  </gazebo> 

<!-- Third vacuum -->

    <link name="vacuum_gripper2">
      <gravity>0</gravity>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder radius="0.0025" length="0.001"/>
        </geometry>
        <material name="transparent">
          <color rgba="0 0 0 0"/>
        </material>
      </visual>

      <inertial>
        <origin rpy="0 0 0" xyz="0.000000 0.000000 0.000000"/>
        <mass value="0.0001"/>
        <inertia ixx="1e-08" ixy="0" ixz="0" iyy="1e-08" iyz="0" izz="1e-08"/>
      </inertial>
    </link>

    <joint name="gripper_joint_2" type="revolute">
      <axis xyz="1 0 0" />
      <parent link="nut_driver" />
      <child link="vacuum_gripper2" />
      <origin rpy=" 0 0 0" xyz="0.0 -0.0065 0.117" />
      <limit effort="50" velocity="50" lower="0" upper="0" />
      <dynamics damping="0.0" friction="10"/>
    </joint>


  <gazebo>
      <plugin name="gazebo_ros_vacuum_gripper" filename="libgazebo_ros_vacuum_gripper.so">
        <robotNamespace>/ur5/vacuum_gripper2</robotNamespace>
        <bodyName>vacuum_gripper2</bodyName>
        <topicName>grasping2</topicName>
	<maxForce>10</maxForce>
        <maxDistance>0.05</maxDistance>
        <minDistance>0.01</minDistance>
      </plugin>
  </gazebo> 

<!-- 7th axis linear rail -->

<link name = "rail">
<visual>
      <origin rpy="0 0 0" xyz="0 0 1.3"/>
      <geometry>
        <box size="8 0.25 0.1"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
 </visual> 
    <collision>
      <origin rpy="0 0 0" xyz="0 0 1.3"/>
      <geometry>
        <box size="8 0.25 0.1"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="15"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 1.3"/>
      <inertia ixx="0.090625" ixy="0.0" ixz="0.0" iyy="80.0125" iyz="0.0" izz="80.078125"/>
    </inertial>
  </link>

<!-- Stand to elevate the rail for above manipulation  -->
<link name = "rail_leg_1">
<visual>
      <origin rpy="0 0 0" xyz="3.8 0 0.625"/>
      <geometry>
        <box size="0.2 0.25 1.25"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
 </visual> 
    <collision>
      <origin rpy="0 0 0" xyz="3.8 0 0.625"/>
      <geometry>
        <box size="0.2 0.25 1.25"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="5"/>
      <origin rpy="0 0 0" xyz="3.8 0.0 0.625"/>
      <inertia ixx="0.9020833" ixy="0.0" ixz="0.0" iyy="0.8927083" iyz="0.0" izz="0.04270833"/>
    </inertial>
  </link>

<link name = "rail_leg_2">
<visual>
      <origin rpy="0 0 0" xyz="-3.8 0 0.625"/>
      <geometry>
        <box size="0.2 0.25 1.25"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
 </visual> 
    <collision>
      <origin rpy="0 0 0" xyz="-3.8 0 0.625"/>
      <geometry>
        <box size="0.2 0.25 1.25"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="5"/>
      <origin rpy="0 0 0" xyz="-3.8 0.0 0.625"/>
      <inertia ixx="0.9020833" ixy="0.0" ixz="0.0" iyy="0.8927083" iyz="0.0" izz="0.04270833"/>
    </inertial>
  </link>

<!-- include RAIL joint -->
  <joint name="rail_joint" type="prismatic">
<origin xyz="0 0 1.25" rpy = "3.14 0.0 0.0"/>
    <parent link="rail"/>
    <child link="base_link"/>
    <axis xyz="1 0 0 "/>
    <limit lower="-3.5" upper="3.5" effort="100" velocity="2.5"/>
  </joint>

<!-- Include Stands Joints -->

  <joint name="rail_leg_1_joint" type="fixed">
    <parent link="rail" />
    <child link = "rail_leg_1" />
    <origin xyz="0.0 0.0 1.25" rpy="3.14 0.0 0.0" />
  </joint>

  <joint name="rail_leg_2_joint" type="fixed">
    <parent link="rail" />
    <child link = "rail_leg_2" />
    <origin xyz="0.0 0.0 1.25" rpy="3.14 0.0 0.0" />
  </joint>

<!-- include RAIL transmission -->
  <transmission name="rail_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rail_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface </hardwareInterface>
    </joint>  
    <actuator name="rail_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface </hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


    <xacro:ur_arm_transmission prefix="${prefix}" />
    <xacro:ur_arm_gazebo prefix="${prefix}" />

    <!-- ROS base_link to UR 'Base' Coordinates transform -->
    <link name="${prefix}base"/>
    <joint name="${prefix}base_link-base_fixed_joint" type="fixed">
      <!-- NOTE: this rotation is only needed as long as base_link itself is
                 not corrected wrt the real robot (ie: rotated over 180
                 degrees)
      -->
      <origin xyz="0 0 0" rpy="0 0 ${-pi}"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}base"/>
    </joint>

    <!-- Frame coincident with all-zeros TCP on UR controller -->
    <link name="${prefix}tool0"/>
    <joint name="${prefix}wrist_3_link-tool0_fixed_joint" type="fixed">
      <origin xyz="0 ${wrist_3_length} 0" rpy="${pi/-2.0} 0 0"/>
      <parent link="${prefix}wrist_3_link"/>
      <child link="${prefix}tool0"/>
    </joint>

 

  </xacro:macro>
</robot>
